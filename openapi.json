{
    "openapi": "3.0.3",
    "info": {
      "title": "Huli API",
      "version": "2.0.0",
      "description": "Public API for the Huli healthcare platform providing endpoints for practice management, \nEHR (Electronic Health Records), patient management, and healthcare integrations.\n\n## API Version\nThis documentation covers v2 endpoints. All new integrations should use v2 endpoints exclusively.\n\n## Getting Started\nBegin with the authentication endpoints below to obtain access credentials and learn about required headers.\n",
      "contact": {
        "name": "Huli Support",
        "email": "soporte@hulipractice.com"
      },
      "x-logo": {
        "url": "./huli-logo.webp",
        "altText": "Huli - Healthcare Platform"
      }
    },
    "servers": [
      {
        "url": "https://api.huli.io",
        "description": "Production server"
      }
    ],
    "tags": [
      {
        "name": "Authentication",
        "description": "API authentication and token management"
      },
      {
        "name": "Organizations",
        "description": "Organization and clinic management"
      },
      {
        "name": "Patient Management",
        "description": "Patient and patient file management operations"
      },
      {
        "name": "EHR - Documents",
        "description": "Document upload and management"
      },
      {
        "name": "EHR - Medical Records",
        "description": "Medical record retrieval"
      },
      {
        "name": "EHR - Checkups",
        "description": "Checkup data retrieval (v2 only)"
      },
      {
        "name": "Appointments",
        "description": "Appointment scheduling and management"
      },
      {
        "name": "Doctors",
        "description": "Doctor information"
      },
      {
        "name": "Webhooks",
        "description": "Webhook event notifications for external systems"
      }
    ],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "paths": {
      "/practice/v2/authorization/token": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Obtain JWT token",
          "description": "Exchange your API key for a JWT token required for all authenticated requests.\n\n**API Key Access:**\nAPI keys must be requested through support channels by the organization owner. \nThe organization ID (`id_organization`) will be provided alongside the API key.\n\n**Usage:**\n1. Include the returned JWT token in the Authorization header: `Bearer {token}`\n2. Include the organization ID in the `id_organization` header for request scoping\n\nMost endpoints require the `id_organization` header to validate the request scope.\n",
          "operationId": "getAuthToken",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "api_key": {
                      "type": "string",
                      "description": "Your organization's API key",
                      "example": "your_api_key_here"
                    }
                  },
                  "required": [
                    "api_key"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "JWT token generated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "response": {
                        "type": "string",
                        "example": "OK"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "jwt": {
                            "type": "string",
                            "description": "JWT token for authentication",
                            "example": "eyJhbGciOiJSUzUxMiIs..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/organization": {
        "get": {
          "tags": [
            "Organizations"
          ],
          "summary": "Get organization information",
          "description": "Retrieve organization information including healthcare professionals.\n\n**Authorization Details:**\nUse the `expand=AUTHORIZATION` query parameter to retrieve detailed authorization \ninformation, including the `idGrantor` fields which contain the doctor user IDs \nassociated with the organization. This provides access to healthcare professional \nidentifiers for further API operations.\n",
          "operationId": "getOrganization",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "expand",
              "in": "query",
              "description": "Include additional details in the response",
              "schema": {
                "type": "string",
                "enum": [
                  "AUTHORIZATION"
                ]
              },
              "example": "AUTHORIZATION"
            }
          ],
          "responses": {
            "200": {
              "description": "Organization information retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/patient-file": {
        "post": {
          "tags": [
            "Patient Management"
          ],
          "summary": "Create patient file",
          "description": "Create a new patient file in the Master Patient Index (MPI). This endpoint creates a comprehensive \npatient record including personal data, contact information, insurance details, and emergency contacts.\n\nThe patient file serves as the central record for all patient-related information across the Huli platform.\n",
          "operationId": "createPatientFile",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFileRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Patient file created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatientFileResponse"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        },
        "get": {
          "tags": [
            "Patient Management"
          ],
          "summary": "List patient files",
          "description": "List all patient files accessible to the user within their organization",
          "operationId": "listPatientFiles",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "query",
              "in": "query",
              "description": "Search filter - can be a phone number, patient name, or identification number",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Maximum number of results to return",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 20
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of results to skip for pagination",
              "schema": {
                "type": "integer",
                "minimum": 0,
                "default": 0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of patient files with pagination",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "patientFiles": {
                        "type": "array",
                        "description": "Array of simplified patient file objects",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Patient file identifier",
                              "example": "130718"
                            },
                            "idUser": {
                              "type": "string",
                              "description": "ID of user who created the record",
                              "example": "3001"
                            },
                            "idPatient": {
                              "type": "string",
                              "description": "Internal patient identifier (when available)",
                              "example": "2617"
                            },
                            "personalData": {
                              "type": "object",
                              "description": "Simplified patient personal information",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "example": "Oscar"
                                },
                                "lastName": {
                                  "type": "string",
                                  "example": "Fernandez"
                                },
                                "knownAs": {
                                  "type": "string",
                                  "description": "Name the patient is commonly known by (when available)",
                                  "example": "Oski"
                                },
                                "photo": {
                                  "type": "string",
                                  "description": "Path to patient's photo (when available)",
                                  "example": "huli/patient/photo/22082019/73383/8ccdbff2d153166b46595bdac0985cd3.jpg"
                                },
                                "patientIds": {
                                  "type": "array",
                                  "description": "Patient identification documents",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "idType": {
                                        "type": "string",
                                        "enum": [
                                          "ID_CARD",
                                          "DRIVER_LICENSE",
                                          "SOCIAL_SECURITY_NUMBER",
                                          "PASSPORT",
                                          "OTHER",
                                          "CURP",
                                          "DIMEX"
                                        ],
                                        "example": "ID_CARD"
                                      },
                                      "idNumber": {
                                        "type": "string",
                                        "example": "342342343"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "contact": {
                              "type": "object",
                              "description": "Simplified contact information (when available)",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "format": "email",
                                  "example": "patient@example.com"
                                }
                              }
                            }
                          }
                        }
                      },
                      "total": {
                        "type": "integer",
                        "description": "Total number of patient files available",
                        "example": 1836
                      },
                      "size": {
                        "type": "integer",
                        "description": "Number of patient files returned in current response",
                        "example": 10
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/patient-file/{patientFileID}": {
        "get": {
          "tags": [
            "Patient Management"
          ],
          "summary": "Get patient file",
          "description": "Retrieve a specific patient file by ID",
          "operationId": "getPatientFile",
          "parameters": [
            {
              "name": "patientFileID",
              "in": "path",
              "required": true,
              "description": "Patient file ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "$ref": "#/components/parameters/OrganizationId"
            }
          ],
          "responses": {
            "200": {
              "description": "Patient file details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatientFileResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/ehr/patient/{patientFileID}/owner/{ownerID}/document": {
        "post": {
          "tags": [
            "EHR - Documents"
          ],
          "summary": "Upload document to patient",
          "description": "Upload a document to a specific patient file",
          "operationId": "uploadDocumentToPatient",
          "parameters": [
            {
              "name": "patientFileID",
              "in": "path",
              "required": true,
              "description": "Patient file ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerID",
              "in": "path",
              "required": true,
              "description": "Owner/Doctor ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Document uploaded successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v1/ehr/patient/{patientID}/owner/{ownerID}/medical-record": {
        "get": {
          "tags": [
            "EHR - Medical Records"
          ],
          "summary": "Get medical record",
          "description": "Retrieve a patient's complete medical record.\n\n**Note:** This endpoint uses v1 format. The response format follows v1 conventions rather than the standardized v2 format used by other endpoints.\n",
          "operationId": "getMedicalRecord",
          "parameters": [
            {
              "name": "patientID",
              "in": "path",
              "required": true,
              "description": "Patient ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerID",
              "in": "path",
              "required": true,
              "description": "Organization owner ID (user ID of the organization owner)",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Medical record data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MedicalRecord"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "403": {
              "$ref": "#/components/responses/Forbidden"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get checkup",
          "description": "Retrieve complete checkup information",
          "operationId": "getCheckup",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Checkup data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Checkup"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/prescription": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get prescription",
          "description": "Retrieve prescription details from a checkup",
          "operationId": "getCheckupPrescription",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Prescription data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupPrescription"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/vital-signs": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get vital signs",
          "description": "Retrieve vital signs recorded during a checkup",
          "operationId": "getCheckupVitalSigns",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Vital signs data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupVitalSigns"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/diagnosis": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get diagnosis",
          "description": "Retrieve diagnosis information from a checkup",
          "operationId": "getCheckupDiagnosis",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Diagnosis data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupDiagnosis"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/lab-procedure-request": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get lab procedure request",
          "description": "Retrieve lab procedure requests from a checkup",
          "operationId": "getCheckupLabProcedureRequest",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Lab procedure request data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupLabProcedure"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/suffering": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get suffering/symptoms",
          "description": "Retrieve patient suffering or symptoms from a checkup",
          "operationId": "getCheckupSuffering",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Suffering/symptoms data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupSuffering"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/reason-of-visit": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get reason of visit",
          "description": "Retrieve reason for visit from a checkup",
          "operationId": "getCheckupReasonOfVisit",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Reason of visit data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupReasonOfVisit"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/physical-note": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get physical examination notes",
          "description": "Retrieve physical examination notes from a checkup",
          "operationId": "getCheckupPhysicalNote",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Physical examination notes",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupPhysicalNote"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/systematic-examination": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get systematic examination",
          "description": "Retrieve systematic examination details from a checkup",
          "operationId": "getCheckupSystematicExamination",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Systematic examination data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupSystematicExamination"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/review-of-systems": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get review of systems",
          "description": "Retrieve review of systems from a checkup",
          "operationId": "getCheckupReviewOfSystems",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Review of systems data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupReviewOfSystems"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/sleep-pattern": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get sleep pattern",
          "description": "Retrieve sleep pattern information from a checkup",
          "operationId": "getCheckupSleepPattern",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Sleep pattern data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupSleepPattern"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/anthropometric-data": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get anthropometric data",
          "description": "Retrieve anthropometric measurements from a checkup",
          "operationId": "getCheckupAnthropometricData",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Anthropometric data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupAnthropometric"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/last-menstrual-cycle": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get last menstrual cycle",
          "description": "Retrieve last menstrual cycle information from a checkup",
          "operationId": "getCheckupLastMenstrualCycle",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Last menstrual cycle data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupLastMenstrualCycle"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/note": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get checkup notes",
          "description": "Retrieve general notes from a checkup",
          "operationId": "getCheckupNote",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Checkup notes",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupNote"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/bowel-habit": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get bowel habit",
          "description": "Retrieve bowel habit information from a checkup",
          "operationId": "getCheckupBowelHabit",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Bowel habit data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupBowelHabit"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/plan-note": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get plan notes",
          "description": "Retrieve treatment plan notes from a checkup",
          "operationId": "getCheckupPlanNote",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Plan notes",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupPlanNote"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/checkup/{eventID}/questions": {
        "get": {
          "tags": [
            "EHR - Checkups"
          ],
          "summary": "Get custom questions",
          "description": "Retrieve custom questions and answers from a checkup",
          "operationId": "getCheckupCustomQuestions",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Checkup ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Custom questions data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckupCustomQuestions"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/availability/doctor/{doctorID}/clinic/{clinicID}": {
        "get": {
          "tags": [
            "Appointments"
          ],
          "summary": "Get doctor availability",
          "description": "Get available time slots for a doctor at a specific clinic",
          "operationId": "getDoctorAvailability",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "doctorID",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "clinicID",
              "in": "path",
              "required": true,
              "description": "Clinic ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "description": "Start date-time for availability range (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "example": "2025-07-01T13:32:00Z"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "description": "End date-time for availability range (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "example": "2025-07-06T13:32:00Z"
            }
          ],
          "responses": {
            "200": {
              "description": "Available time slots",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DoctorAvailabilityResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment": {
        "post": {
          "tags": [
            "Appointments"
          ],
          "summary": "Create appointment",
          "description": "Schedule a new appointment between patients and doctors.\n\n**Required fields**: `id_doctor`, `id_clinic`, `start_date`, `time_from`\n\n**Appointment Duration Options:**\n- Provide `source_event` (availability slot ID) - system calculates `end_date` and `time_to` automatically\n- OR provide `end_date` and `time_to` manually\n- One of these approaches is required\n\n**Recommendation**: Using `source_event` is recommended to ensure the appointment is created during an available time slot. \nQuery availability endpoints first to get valid slot IDs.\n\n**Core Requirements:**\n- Doctor must be associated with the specified clinic\n\n**Permission-Based Restrictions:**\nSome users may have additional business rules enforced, such as:\n- Appointments must be scheduled at least 1 hour in advance\n- Patient cannot have multiple appointments with same doctor on same day  \n- Maximum 3 appointments per patient per day (when patient file provided)\n\n**Important**: Business rules and validation requirements vary significantly based on user-specific permissions. \nThe above restrictions are examples that may or may not apply to your API key.\n",
          "operationId": "createAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppointmentRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Appointment created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/{eventID}": {
        "get": {
          "tags": [
            "Appointments"
          ],
          "summary": "Get appointment",
          "description": "Retrieve appointment details by event ID",
          "operationId": "getAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Appointment details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        },
        "put": {
          "tags": [
            "Appointments"
          ],
          "summary": "Update appointment",
          "description": "Update appointment details.\n\n**Requirements:**\n- Appointment must have status `BOOKED`\n- Field availability depends on user permissions\n",
          "operationId": "updateAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppointmentRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Appointment updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/{eventID}/cancel": {
        "put": {
          "tags": [
            "Appointments"
          ],
          "summary": "Cancel appointment",
          "description": "Cancel an appointment, changing its status to `CANCELLED` and availability to `IGNORE`.\n\n**Effects:**\n- Status changes from `BOOKED` to `CANCELLED`\n- Availability changes from `BUSY` to `IGNORE`\n- Sets `isStatusModifiedByPatient` flag based on request\n",
          "operationId": "cancelAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_status_modified_by_patient": {
                      "type": "boolean",
                      "description": "Flag to indicate if the cancellation was requested by the patient",
                      "example": true
                    }
                  },
                  "required": [
                    "is_status_modified_by_patient"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Appointment cancelled successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/{eventID}/patient-confirm": {
        "put": {
          "tags": [
            "Appointments"
          ],
          "summary": "Confirm appointment",
          "description": "Mark an appointment as confirmed by patient.\n\n**Effects:**\n- Sets `isConfirmedByPatient` to `true`\n- Appointment status remains `BOOKED`\n",
          "operationId": "confirmAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Appointment confirmed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/{eventID}/reschedule": {
        "put": {
          "tags": [
            "Appointments"
          ],
          "summary": "Reschedule appointment",
          "description": "Reschedule an existing appointment to a new date and time.\n\n**Requirements:**\n- Only appointments with status `BOOKED` can be rescheduled\n- Appointments with associated checkups cannot be rescheduled\n- Field availability depends on user permissions\n\n**Effects:**\n- Creates new appointment with new date/time\n- Original appointment marked as `RESCHEDULED`\n- Sends notifications to patient and provider\n\n**Business Rules:**\n- Maximum 3 appointments per patient per day\n- No overlapping appointments for same patient\n- Must be scheduled in the future with advance notice\n",
          "operationId": "rescheduleAppointment",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isStatusModifiedByPatient": {
                      "type": "boolean",
                      "description": "Flag to indicate if the reschedule was requested by the patient",
                      "example": true
                    },
                    "startDate": {
                      "type": "string",
                      "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
                      "description": "New start date for the appointment (YYYY-MM-DD)",
                      "example": "2024-07-15"
                    },
                    "timeFrom": {
                      "type": "string",
                      "pattern": "[0-9]{2}:[0-9]{2}:[0-9]{2}",
                      "description": "New start time for the appointment (HH:MM:SS)",
                      "example": "14:30:00"
                    },
                    "endDate": {
                      "type": "string",
                      "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
                      "description": "New end date for the appointment (YYYY-MM-DD)",
                      "example": "2024-07-15"
                    },
                    "timeTo": {
                      "type": "string",
                      "pattern": "[0-9]{2}:[0-9]{2}:[0-9]{2}",
                      "description": "New end time for the appointment (HH:MM:SS)",
                      "example": "15:00:00"
                    },
                    "sourceEvent": {
                      "type": "string",
                      "description": "Availability event ID for the new appointment slot",
                      "example": "12345"
                    }
                  },
                  "required": [
                    "isStatusModifiedByPatient",
                    "startDate",
                    "timeFrom"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Appointment rescheduled successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/{eventID}/no-show": {
        "put": {
          "tags": [
            "Appointments"
          ],
          "summary": "Mark appointment as no-show",
          "description": "Mark an appointment as no-show when patient doesn't attend.\n\n**Requirements:**\n- Appointment status must be `BOOKED` or `COMPLETED`\n- Appointment must be in the past (cannot mark future appointments)\n\n**Effects:**\n- Creates new appointment record with status `NOSHOW`\n- Inactivates original appointment record\n- Sends notifications to patient and provider\n",
          "operationId": "markAppointmentNoShow",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "eventID",
              "in": "path",
              "required": true,
              "description": "Event/Appointment ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Appointment marked as no-show successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/BadRequest"
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/doctor/{doctorID}": {
        "get": {
          "tags": [
            "Appointments"
          ],
          "summary": "List doctor appointments",
          "description": "Get all appointments for a specific doctor with filtering and pagination support.\n\n**Required Parameters:**\n- Date range (`from` and `to`) is mandatory for filtering appointments\n\n**Filtering:**\n- Filter by appointment status, clinic, or pagination\n- All appointments within date range returned by default\n",
          "operationId": "listDoctorAppointments",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "doctorID",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "description": "Start date filter (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time",
                "example": "2024-01-01T00:00:00Z"
              }
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "description": "End date filter (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time",
                "example": "2024-12-31T23:59:59Z"
              }
            },
            {
              "name": "idClinic",
              "in": "query",
              "description": "Filter by specific clinic ID",
              "schema": {
                "type": "string",
                "example": "2877"
              }
            },
            {
              "name": "status_appointment",
              "in": "query",
              "description": "Filter by appointment status",
              "schema": {
                "type": "string",
                "enum": [
                  "BOOKED",
                  "RESCHEDULED",
                  "COMPLETED",
                  "CANCELLED",
                  "NOSHOW"
                ],
                "example": "COMPLETED"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Maximum number of results to return",
              "schema": {
                "type": "integer",
                "example": 20
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of results to skip for pagination",
              "schema": {
                "type": "integer",
                "example": 0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of appointments with pagination metadata",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "appointments": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Appointment"
                        }
                      },
                      "total": {
                        "type": "string",
                        "description": "Total number of appointments matching the criteria",
                        "example": "1003"
                      },
                      "size": {
                        "type": "string",
                        "description": "Number of appointments returned in this response",
                        "example": "20"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/patient/{patientFileID}": {
        "get": {
          "tags": [
            "Appointments"
          ],
          "summary": "List patient appointments",
          "description": "Get all appointments for a specific patient with filtering and pagination support.",
          "operationId": "listPatientAppointments",
          "parameters": [
            {
              "name": "patientFileID",
              "in": "path",
              "required": true,
              "description": "Patient file ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "from",
              "in": "query",
              "description": "Start date filter (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time",
                "example": "2024-01-01T00:00:00Z"
              }
            },
            {
              "name": "to",
              "in": "query",
              "description": "End date filter (ISO 8601 format)",
              "schema": {
                "type": "string",
                "format": "date-time",
                "example": "2024-12-31T23:59:59Z"
              }
            },
            {
              "name": "status_appointment",
              "in": "query",
              "description": "Filter by appointment status",
              "schema": {
                "type": "string",
                "enum": [
                  "BOOKED",
                  "RESCHEDULED",
                  "COMPLETED",
                  "CANCELLED",
                  "NOSHOW"
                ],
                "example": "COMPLETED"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Maximum number of results to return",
              "schema": {
                "type": "integer",
                "example": 20
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of results to skip for pagination",
              "schema": {
                "type": "integer",
                "example": 0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of appointments with pagination metadata",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "appointments": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Appointment"
                        }
                      },
                      "total": {
                        "type": "string",
                        "description": "Total number of appointments matching the criteria",
                        "example": "7"
                      },
                      "size": {
                        "type": "string",
                        "description": "Number of appointments returned in this response",
                        "example": "5"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "403": {
              "$ref": "#/components/responses/Forbidden"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/appointment/tags": {
        "get": {
          "tags": [
            "Appointments"
          ],
          "summary": "List booking tags",
          "description": "Get all available booking tags for the organization with pagination support.\n\nTags can be used to categorize and filter appointments based on custom organizational criteria.\n",
          "operationId": "listBookingTags",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Maximum number of tags to return",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of tags to skip for pagination",
              "schema": {
                "type": "integer",
                "example": 0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of booking tags with pagination metadata",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BookingTag"
                        }
                      },
                      "total": {
                        "type": "string",
                        "description": "Total number of tags available",
                        "example": "16"
                      },
                      "size": {
                        "type": "string",
                        "description": "Number of tags returned in this response",
                        "example": "10"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/doctor/{IDDoctor}": {
        "get": {
          "tags": [
            "Doctors"
          ],
          "summary": "Get doctor by ID",
          "description": "Get doctor information by doctor ID from the doctor service.\n\nThis endpoint retrieves comprehensive doctor data including specialties, clinic associations, and user information.\n",
          "operationId": "getDoctorById",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "IDDoctor",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              },
              "example": "1001"
            }
          ],
          "responses": {
            "200": {
              "description": "Doctor information",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Doctor"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/doctor/user/{IDUser}": {
        "get": {
          "tags": [
            "Doctors"
          ],
          "summary": "Get doctor by user ID",
          "description": "Get doctor information by user ID",
          "operationId": "getDoctorByUserId",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "IDUser",
              "in": "path",
              "required": true,
              "description": "User ID",
              "schema": {
                "type": "string"
              },
              "example": "3001"
            }
          ],
          "responses": {
            "200": {
              "description": "Doctor information",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Doctor"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/doctor/{doctorID}/clinic/{clinicID}": {
        "get": {
          "tags": [
            "Doctors"
          ],
          "summary": "Get doctor clinic info",
          "description": "Get doctor information at a specific clinic",
          "operationId": "getDoctorClinicInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "doctorID",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              },
              "example": "1001"
            },
            {
              "name": "clinicID",
              "in": "path",
              "required": true,
              "description": "Clinic ID",
              "schema": {
                "type": "string"
              },
              "example": "2001"
            }
          ],
          "responses": {
            "200": {
              "description": "Doctor clinic information",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DoctorClinic"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/doctor/{doctorID}/clinic/{clinicID}/phone": {
        "get": {
          "tags": [
            "Doctors"
          ],
          "summary": "Get doctor clinic phone",
          "description": "Get doctor's phone number at a specific clinic",
          "operationId": "getDoctorClinicPhone",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "doctorID",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "clinicID",
              "in": "path",
              "required": true,
              "description": "Clinic ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Doctor clinic phone information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "idDoctor": {
                        "type": "string",
                        "description": "Doctor ID",
                        "example": "1"
                      },
                      "idClinic": {
                        "type": "string",
                        "description": "Clinic ID",
                        "example": "2292"
                      },
                      "phone": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Phone number with extension",
                          "example": "+506 88776655 (ext 123)"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      },
      "/practice/v2/doctor/{doctorID}/clinic/{clinicID}/address": {
        "get": {
          "tags": [
            "Doctors"
          ],
          "summary": "Get doctor clinic address",
          "description": "Get doctor's address at a specific clinic",
          "operationId": "getDoctorClinicAddress",
          "parameters": [
            {
              "$ref": "#/components/parameters/OrganizationId"
            },
            {
              "name": "doctorID",
              "in": "path",
              "required": true,
              "description": "Doctor ID",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "clinicID",
              "in": "path",
              "required": true,
              "description": "Clinic ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Doctor clinic address information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "idDoctor": {
                        "type": "string",
                        "description": "Doctor ID",
                        "example": "1"
                      },
                      "idClinic": {
                        "type": "string",
                        "description": "Clinic ID",
                        "example": "2292"
                      },
                      "address": {
                        "type": "string",
                        "description": "Clinic address",
                        "example": "123 Medical Plaza, Building A, Floor 2, Office 15"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/NotFound"
            },
            "500": {
              "$ref": "#/components/responses/ServerError"
            }
          }
        }
      }
    },
    "webhooks": {
      "appointmentEvents": {
        "post": {
          "tags": [
            "Webhooks"
          ],
          "summary": "Appointment Events",
          "description": "Webhook notifications sent when appointment-related events occur in the system.\n\n**Event Types:**\n- `APPOINTMENT_CREATED` - Triggered when a new appointment is scheduled\n- `APPOINTMENT_UPDATED` - Triggered when appointment details are modified\n- `APPOINTMENT_CANCELLED` - Triggered when an appointment is cancelled\n- `APPOINTMENT_RESCHEDULED` - Triggered when an appointment is moved to a different time\n\n**Setup Required:**\nWebhook subscriptions must be requested through Huli support. Contact support with your webhook endpoint URL, preferred authentication method, and which events you want to receive.\n",
          "operationId": "appointmentWebhook",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentWebhookPayload"
                },
                "examples": {
                  "appointmentCreated": {
                    "summary": "Appointment Created",
                    "value": {
                      "id": 12345,
                      "event": "APPOINTMENT_CREATED",
                      "timestamp": "2023-12-01T10:00:00Z",
                      "data": {
                        "id_event": 67890,
                        "id_appointment": 54321,
                        "patient": {
                          "id": 98765,
                          "name": "John Doe",
                          "email": "john.doe@example.com"
                        },
                        "doctor": {
                          "id": 11111,
                          "name": "Dr. Smith"
                        },
                        "appointment_time": "2023-12-01T14:00:00Z",
                        "status": "SCHEDULED"
                      }
                    }
                  },
                  "appointmentCancelled": {
                    "summary": "Appointment Cancelled",
                    "value": {
                      "id": 12346,
                      "event": "APPOINTMENT_CANCELLED",
                      "timestamp": "2023-12-01T10:05:00Z",
                      "data": {
                        "id_event": 67891,
                        "id_appointment": 54321,
                        "reason": "Patient requested cancellation"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Webhook received successfully"
            },
            "400": {
              "description": "Invalid webhook payload"
            },
            "401": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Webhook processing failed"
            }
          },
          "security": [
            {
              "webhookAuth": []
            }
          ]
        }
      },
      "checkupEvents": {
        "post": {
          "tags": [
            "Webhooks"
          ],
          "summary": "Checkup Events",
          "description": "Webhook notifications sent when checkup-related events occur in the system.\n\n**Event Types:**\n- `CHECKUP_CREATED` - Triggered when a new checkup is completed\n- `CHECKUP_UPDATED` - Triggered when checkup data is modified\n\n**Using Webhook Data:**\nThe checkup data provided in the webhook payload can be used to retrieve detailed information using the checkup API endpoints in the \"EHR - Checkups\" section. Use the `id_event` field to fetch specific checkup data like vital signs, systematic examination, and other checkup details.\n\n**Setup Required:**\nWebhook subscriptions must be requested through Huli support. Contact support with your webhook endpoint URL, preferred authentication method, and which events you want to receive.\n",
          "operationId": "checkupWebhook",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckupWebhookPayload"
                },
                "examples": {
                  "checkupCreated": {
                    "summary": "Checkup Created",
                    "value": {
                      "id": 12347,
                      "event": "CHECKUP_CREATED",
                      "timestamp": "2023-12-01T15:30:00Z",
                      "data": {
                        "id_event": 67892,
                        "patient": {
                          "id": 98765,
                          "name": "John Doe"
                        },
                        "doctor": {
                          "id": 11111,
                          "name": "Dr. Smith"
                        },
                        "checkup_date": "2023-12-01T15:00:00Z",
                        "type": "REGULAR_CHECKUP"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Webhook received successfully"
            },
            "400": {
              "description": "Invalid webhook payload"
            },
            "401": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Webhook processing failed"
            }
          },
          "security": [
            {
              "webhookAuth": []
            }
          ]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "JWT authentication token. Include in the Authorization header as: Bearer {token}\n"
        },
        "webhookAuth": {
          "type": "http",
          "scheme": "bearer",
          "description": "Authentication for webhook delivery. The specific authentication method depends on your webhook configuration setup with Huli support. Available methods include:\n- Bearer tokens\n- API keys in headers\n- OAuth 2.0\n- Session-based authentication\n"
        }
      },
      "parameters": {
        "OrganizationId": {
          "name": "id_organization",
          "in": "header",
          "required": true,
          "description": "Organization ID for scoping operations to a specific organization",
          "schema": {
            "type": "integer",
            "example": 4001
          }
        }
      },
      "schemas": {
        "Error": {
          "type": "object",
          "required": [
            "error"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code",
                  "example": "CHA00001"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable error message",
                  "example": "Invalid JSON"
                }
              }
            }
          }
        },
        "WebhookPayload": {
          "type": "object",
          "required": [
            "id",
            "event",
            "timestamp",
            "data"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for this webhook delivery",
              "example": 12345
            },
            "event": {
              "type": "string",
              "description": "Type of event that triggered this webhook",
              "enum": [
                "APPOINTMENT_CREATED",
                "APPOINTMENT_UPDATED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_RESCHEDULED",
                "CHECKUP_CREATED",
                "CHECKUP_UPDATED"
              ],
              "example": "APPOINTMENT_CREATED"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when the event occurred",
              "example": "2023-12-01T10:00:00Z"
            },
            "data": {
              "type": "object",
              "description": "Event-specific data payload",
              "properties": {
                "id_event": {
                  "type": "integer",
                  "description": "Internal event identifier",
                  "example": 67890
                },
                "id_appointment": {
                  "type": "integer",
                  "description": "Appointment identifier (for appointment events)",
                  "example": 54321
                },
                "patient": {
                  "type": "object",
                  "description": "Patient information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Patient identifier",
                      "example": 98765
                    },
                    "name": {
                      "type": "string",
                      "description": "Patient full name",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "description": "Patient email address",
                      "example": "john.doe@example.com"
                    }
                  }
                },
                "doctor": {
                  "type": "object",
                  "description": "Doctor information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Doctor identifier",
                      "example": 11111
                    },
                    "name": {
                      "type": "string",
                      "description": "Doctor name",
                      "example": "Dr. Smith"
                    }
                  }
                },
                "appointment_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Scheduled appointment time (for appointment events)",
                  "example": "2023-12-01T14:00:00Z"
                },
                "status": {
                  "type": "string",
                  "description": "Current status (for appointment events)",
                  "example": "SCHEDULED"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for action (e.g., cancellation reason)",
                  "example": "Patient requested cancellation"
                },
                "checkup_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Checkup completion date (for checkup events)",
                  "example": "2023-12-01T15:00:00Z"
                },
                "type": {
                  "type": "string",
                  "description": "Type of checkup (for checkup events)",
                  "example": "REGULAR_CHECKUP"
                }
              }
            }
          }
        },
        "AppointmentWebhookPayload": {
          "type": "object",
          "required": [
            "id",
            "event",
            "timestamp",
            "data"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for this webhook delivery",
              "example": 12345
            },
            "event": {
              "type": "string",
              "description": "Type of appointment event that triggered this webhook",
              "enum": [
                "APPOINTMENT_CREATED",
                "APPOINTMENT_UPDATED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_RESCHEDULED"
              ],
              "example": "APPOINTMENT_CREATED"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when the event occurred",
              "example": "2023-12-01T10:00:00Z"
            },
            "data": {
              "type": "object",
              "description": "Appointment-specific data payload",
              "properties": {
                "id_event": {
                  "type": "integer",
                  "description": "Internal event identifier",
                  "example": 67890
                },
                "id_appointment": {
                  "type": "integer",
                  "description": "Appointment identifier",
                  "example": 54321
                },
                "patient": {
                  "type": "object",
                  "description": "Patient information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Patient identifier",
                      "example": 98765
                    },
                    "name": {
                      "type": "string",
                      "description": "Patient full name",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "description": "Patient email address",
                      "example": "john.doe@example.com"
                    }
                  }
                },
                "doctor": {
                  "type": "object",
                  "description": "Doctor information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Doctor identifier",
                      "example": 11111
                    },
                    "name": {
                      "type": "string",
                      "description": "Doctor name",
                      "example": "Dr. Smith"
                    }
                  }
                },
                "appointment_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Scheduled appointment time",
                  "example": "2023-12-01T14:00:00Z"
                },
                "status": {
                  "type": "string",
                  "description": "Current appointment status",
                  "example": "SCHEDULED"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for action (e.g., cancellation reason)",
                  "example": "Patient requested cancellation"
                }
              }
            }
          }
        },
        "CheckupWebhookPayload": {
          "type": "object",
          "required": [
            "id",
            "event",
            "timestamp",
            "data"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for this webhook delivery",
              "example": 12347
            },
            "event": {
              "type": "string",
              "description": "Type of checkup event that triggered this webhook",
              "enum": [
                "CHECKUP_CREATED",
                "CHECKUP_UPDATED"
              ],
              "example": "CHECKUP_CREATED"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when the event occurred",
              "example": "2023-12-01T15:30:00Z"
            },
            "data": {
              "type": "object",
              "description": "Checkup-specific data payload. Use the `id_event` field to retrieve detailed checkup information using the checkup API endpoints in the \"EHR - Checkups\" section.\n",
              "properties": {
                "id_event": {
                  "type": "integer",
                  "description": "Internal event identifier - use this with checkup API endpoints to retrieve detailed data",
                  "example": 67892
                },
                "patient": {
                  "type": "object",
                  "description": "Patient information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Patient identifier",
                      "example": 98765
                    },
                    "name": {
                      "type": "string",
                      "description": "Patient full name",
                      "example": "John Doe"
                    }
                  }
                },
                "doctor": {
                  "type": "object",
                  "description": "Doctor information",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Doctor identifier",
                      "example": 11111
                    },
                    "name": {
                      "type": "string",
                      "description": "Doctor name",
                      "example": "Dr. Smith"
                    }
                  }
                },
                "checkup_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Checkup completion date",
                  "example": "2023-12-01T15:00:00Z"
                },
                "type": {
                  "type": "string",
                  "description": "Type of checkup",
                  "example": "REGULAR_CHECKUP"
                }
              }
            }
          }
        },
        "PatientFileRequest": {
          "type": "object",
          "required": [
            "personalData"
          ],
          "properties": {
            "personalData": {
              "type": "object",
              "required": [
                "firstName"
              ],
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "Patient's first name",
                  "example": "Nombre"
                },
                "lastName": {
                  "type": "string",
                  "description": "Patient's last name (can include both surnames)",
                  "example": "Apellido1 Apellido2"
                },
                "knownAs": {
                  "type": "string",
                  "description": "Name the patient is commonly known by",
                  "example": "Conocido Como"
                },
                "idEthnicGroup": {
                  "type": "integer",
                  "description": "Ethnic group identifier:\n- 1: Afro-descendant\n- 2: Indigenous\n- 3: Arab\n- 4: Caucasian\n- 5: Mestizo\n- 6: Oriental\n- 7: Other\n- 9: Mulatto\n- 10: Latino\n",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10
                  ],
                  "example": 5
                },
                "ethnicGroupOther": {
                  "type": "string",
                  "description": "Description if ethnic group is 'Other'",
                  "example": "Otro Grupo Etnico"
                },
                "photo": {
                  "type": "string",
                  "description": "Path to patient's photo",
                  "example": "/huli/patient/photo/0upxts.jpg"
                },
                "birthdate": {
                  "type": "string",
                  "format": "date",
                  "description": "Patient's date of birth (YYYY-MM-DD)",
                  "example": "1995-06-16"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "MALE",
                    "FEMALE",
                    "INTERSEXUAL"
                  ],
                  "description": "Patient's biological sex (defaults to NONE_GENDER if not provided)",
                  "example": "MALE"
                },
                "bloodType": {
                  "type": "string",
                  "enum": [
                    "O_POSITIVE",
                    "O_NEGATIVE",
                    "A_POSITIVE",
                    "A_NEGATIVE",
                    "B_POSITIVE",
                    "B_NEGATIVE",
                    "AB_POSITIVE",
                    "AB_NEGATIVE",
                    "UNKNOWN"
                  ],
                  "description": "Patient's blood type",
                  "example": "O_POSITIVE"
                },
                "maritalStatus": {
                  "type": "string",
                  "enum": [
                    "SINGLE",
                    "MARRIED",
                    "DIVORCED",
                    "WIDOWED",
                    "SEPARATED",
                    "COMMON_LAW",
                    "OTHER"
                  ],
                  "description": "Patient's marital status (defaults to NO_MARITAL_STATUS if not provided)",
                  "example": "SINGLE"
                },
                "occupation": {
                  "type": "string",
                  "description": "Patient's occupation",
                  "example": "Software Engineer"
                },
                "pob": {
                  "type": "string",
                  "description": "Place of birth",
                  "example": "San José, Costa Rica"
                },
                "patientIds": {
                  "type": "array",
                  "description": "Patient identification documents",
                  "items": {
                    "type": "object",
                    "required": [
                      "idType",
                      "idNumber"
                    ],
                    "properties": {
                      "idType": {
                        "type": "string",
                        "enum": [
                          "ID_CARD",
                          "DRIVER_LICENSE",
                          "SOCIAL_SECURITY_NUMBER",
                          "PASSPORT",
                          "OTHER",
                          "CURP",
                          "DIMEX"
                        ],
                        "description": "Type of identification document (CURP for Mexico, DIMEX for Costa Rica)",
                        "example": "ID_CARD"
                      },
                      "idNumber": {
                        "type": "string",
                        "description": "Identification number",
                        "example": "122223333"
                      }
                    }
                  }
                }
              }
            },
            "contact": {
              "type": "object",
              "properties": {
                "idProvince": {
                  "type": "integer",
                  "description": "Province/State identifier by country:\n\n**Costa Rica:**\n- 727: Alajuela\n- 728: Cartago  \n- 729: Guanacaste\n- 730: Heredia\n- 731: Limón\n- 732: Puntarenas\n- 733: San José\n\n**Mexico:**\n- 2012: Aguascalientes\n- 2013: Baja California\n- 2014: Baja California Sur\n- 2015: Campeche\n- 2016: Chiapas\n- 2017: Chihuahua\n- 2018: Coahuila\n- 2019: Colima\n- 2020: Mexico\n- 2021: Durango\n- 2022: Guanajuato\n- 2023: Guerrero\n- 2024: Hidalgo\n- 2025: Jalisco\n- 2026: Ciudad de México\n- 2027: Michoacán\n- 2028: Morelos\n- 2029: Nayarit\n- 2030: Nuevo León\n- 2031: Oaxaca\n- 2032: Puebla\n- 2033: Querétaro\n- 2034: Quintana Roo\n- 2035: San Luis Potosí\n- 2036: Sinaloa\n- 2037: Sonora\n- 2038: Tabasco\n- 2039: Tamaulipas\n- 2040: Tlaxcala\n- 2041: Veracruz-Llave\n- 2042: Yucatán\n- 2043: Zacatecas\n\n**Panama:**\n- 2403: Bocas del Toro\n- 2404: Chiriquí\n- 2405: Coclé\n- 2406: Colón\n- 2407: Darién\n- 2408: Herrera\n- 2409: Los Santos\n- 2410: Panamá\n",
                  "example": 733
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Contact email address",
                  "example": "patient@example.com"
                },
                "address": {
                  "type": "string",
                  "description": "Physical address",
                  "example": "100 meters south and 100 meters east from Plaza del Sol"
                },
                "sendNotifications": {
                  "type": "boolean",
                  "description": "Whether to send notifications to this contact",
                  "example": true
                },
                "phones": {
                  "type": "array",
                  "description": "Contact phone numbers",
                  "items": {
                    "type": "object",
                    "required": [
                      "type",
                      "phoneNumber",
                      "country"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "MOBILE",
                          "HOME",
                          "WORK",
                          "OTHER"
                        ],
                        "description": "Type of phone number",
                        "example": "MOBILE"
                      },
                      "phoneNumber": {
                        "type": "integer",
                        "description": "Phone number without country code",
                        "example": 88776644
                      },
                      "phoneExtension": {
                        "type": "integer",
                        "description": "Phone extension (optional)",
                        "example": 123
                      },
                      "country": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Country identifier:\n- 188: Costa Rica\n- 484: Mexico\n- 591: Panama\n",
                            "enum": [
                              188,
                              484,
                              591
                            ],
                            "example": 188
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "insurance": {
              "type": "object",
              "properties": {
                "notes": {
                  "type": "string",
                  "description": "Additional insurance notes",
                  "example": "Patient has dual coverage"
                },
                "affiliations": {
                  "type": "array",
                  "description": "Insurance affiliations",
                  "items": {
                    "type": "object",
                    "required": [
                      "idInsurance",
                      "insuranceNumber"
                    ],
                    "properties": {
                      "idInsurance": {
                        "type": "integer",
                        "description": "Insurance company identifier",
                        "example": 2
                      },
                      "insuranceNumber": {
                        "type": "string",
                        "description": "Insurance policy number",
                        "example": "abc123"
                      }
                    }
                  }
                }
              }
            },
            "emergencyContact": {
              "type": "object",
              "properties": {
                "notes": {
                  "type": "string",
                  "description": "General emergency contact notes",
                  "example": "Contact father first during business hours"
                },
                "people": {
                  "type": "array",
                  "description": "Emergency contact persons",
                  "items": {
                    "type": "object",
                    "required": [
                      "relationship",
                      "name"
                    ],
                    "properties": {
                      "relationship": {
                        "type": "string",
                        "description": "Relationship to patient",
                        "example": "Padre"
                      },
                      "name": {
                        "type": "string",
                        "description": "Contact person's full name",
                        "example": "Contacto Padre"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Contact person's email",
                        "example": "padre@example.com"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Notes about this contact",
                        "example": "Available Monday-Friday 8am-5pm"
                      },
                      "sendNotifications": {
                        "type": "boolean",
                        "description": "Whether to send notifications to this contact",
                        "example": true
                      },
                      "phones": {
                        "type": "array",
                        "description": "Contact person's phone numbers",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "phoneNumber",
                            "country"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MOBILE",
                                "HOME",
                                "WORK",
                                "OTHER"
                              ],
                              "description": "Type of phone number",
                              "example": "MOBILE"
                            },
                            "phoneNumber": {
                              "type": "integer",
                              "description": "Phone number without country code",
                              "example": 66778899
                            },
                            "phoneExtension": {
                              "type": "integer",
                              "description": "Phone extension (optional)",
                              "example": 123
                            },
                            "country": {
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "Country identifier",
                                  "example": 188
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "PatientFileResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Patient file identifier",
              "example": "130818"
            },
            "status": {
              "type": "string",
              "description": "Patient file status",
              "example": "ACTIVE"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who last modified the record",
              "example": "56576"
            },
            "idUser": {
              "type": "string",
              "description": "ID of user who created the record",
              "example": "3001"
            },
            "idPatient": {
              "type": "string",
              "description": "Internal patient identifier",
              "example": "2617"
            },
            "patient": {
              "type": "object",
              "description": "Patient metadata (when available)",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Patient record ID",
                  "example": "2617"
                },
                "status": {
                  "type": "string",
                  "example": "ACTIVE"
                },
                "source": {
                  "type": "string",
                  "description": "Source system that created the patient",
                  "example": "PHR"
                },
                "createdOn": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Patient record creation timestamp",
                  "example": "2024-01-15T10:30:00Z"
                },
                "modifiedOn": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Patient record modification timestamp",
                  "example": "2024-03-20T14:45:00Z"
                }
              }
            },
            "personalData": {
              "type": "object",
              "description": "Patient's personal information",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Personal data record ID",
                  "example": "136731"
                },
                "status": {
                  "type": "string",
                  "example": "ACTIVE"
                },
                "idUserModifiedBy": {
                  "type": "string",
                  "example": "56576"
                },
                "firstName": {
                  "type": "string",
                  "example": "Test"
                },
                "lastName": {
                  "type": "string",
                  "example": "Patient"
                },
                "knownAs": {
                  "type": "string",
                  "description": "Name the patient is commonly known by",
                  "example": "Oski"
                },
                "birthdate": {
                  "type": "string",
                  "format": "date",
                  "description": "Patient's date of birth (YYYY-MM-DD)",
                  "example": "1990-01-01"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "MALE",
                    "FEMALE",
                    "INTERSEXUAL"
                  ],
                  "example": "MALE"
                },
                "bloodType": {
                  "type": "string",
                  "enum": [
                    "O_POSITIVE",
                    "O_NEGATIVE",
                    "A_POSITIVE",
                    "A_NEGATIVE",
                    "B_POSITIVE",
                    "B_NEGATIVE",
                    "AB_POSITIVE",
                    "AB_NEGATIVE",
                    "UNKNOWN"
                  ],
                  "description": "Patient's blood type (when available)",
                  "example": "O_POSITIVE"
                },
                "maritalStatus": {
                  "type": "string",
                  "enum": [
                    "SINGLE",
                    "MARRIED",
                    "DIVORCED",
                    "WIDOWED",
                    "SEPARATED",
                    "COMMON_LAW",
                    "OTHER"
                  ],
                  "description": "Patient's marital status (when available)",
                  "example": "MARRIED"
                },
                "occupation": {
                  "type": "string",
                  "description": "Patient's occupation (when available)",
                  "example": "Full Stack Developer"
                },
                "pob": {
                  "type": "string",
                  "description": "Place of birth (when available)",
                  "example": "San José, Costa Rica"
                },
                "patientIds": {
                  "type": "array",
                  "description": "Patient identification documents",
                  "items": {
                    "type": "object",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "enum": [
                          "ID_CARD",
                          "DRIVER_LICENSE",
                          "SOCIAL_SECURITY_NUMBER",
                          "PASSPORT",
                          "OTHER",
                          "CURP",
                          "DIMEX"
                        ],
                        "example": "ID_CARD"
                      },
                      "idNumber": {
                        "type": "string",
                        "example": "342342343"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      }
                    }
                  }
                },
                "modifiedOn": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the record was last modified",
                  "example": "2025-07-02T03:45:14Z"
                }
              }
            },
            "contact": {
              "type": "object",
              "description": "Patient contact information (when available)",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Contact record ID",
                  "example": "135640"
                },
                "status": {
                  "type": "string",
                  "example": "ACTIVE"
                },
                "idUserModifiedBy": {
                  "type": "string",
                  "example": "100242"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "patient@example.com"
                },
                "sendNotifications": {
                  "type": "boolean",
                  "description": "Whether to send notifications to this contact",
                  "example": true
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "245709"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "MOBILE",
                          "HOME",
                          "WORK",
                          "OTHER"
                        ],
                        "example": "MOBILE"
                      },
                      "phoneNumber": {
                        "type": "string",
                        "description": "Phone number (may be absent in some cases)",
                        "example": "888880008888"
                      },
                      "phoneExtension": {
                        "type": "string",
                        "description": "Phone extension (when available)",
                        "example": "789"
                      },
                      "country": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "188"
                          },
                          "iso2": {
                            "type": "string",
                            "example": "CR"
                          },
                          "iso3": {
                            "type": "string",
                            "example": "CRI"
                          },
                          "name": {
                            "type": "string",
                            "example": "Costa Rica"
                          },
                          "phonePrefix": {
                            "type": "string",
                            "example": "506"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "insurance": {
              "type": "object",
              "description": "Patient insurance information (when available)",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Insurance record ID",
                  "example": "115912"
                },
                "status": {
                  "type": "string",
                  "example": "ACTIVE"
                },
                "idUserModifiedBy": {
                  "type": "string",
                  "example": "100242"
                },
                "notes": {
                  "type": "string",
                  "description": "Insurance notes",
                  "example": "test fer"
                },
                "affiliations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1996"
                      },
                      "idPatientInsurance": {
                        "type": "string",
                        "example": "115912"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      },
                      "idInsurance": {
                        "type": "string",
                        "description": "Insurance company identifier (returned as string despite integer input)",
                        "example": "340"
                      },
                      "insuranceNumber": {
                        "type": "string",
                        "example": "23423423411111"
                      },
                      "insuranceName": {
                        "type": "string",
                        "example": "fernando"
                      }
                    }
                  }
                }
              }
            },
            "emergencyContact": {
              "type": "object",
              "description": "Emergency contact information (when available)",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Emergency contact record ID",
                  "example": "116653"
                },
                "status": {
                  "type": "string",
                  "example": "ACTIVE"
                },
                "idUserModifiedBy": {
                  "type": "string",
                  "example": "100242"
                },
                "people": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "111231"
                      },
                      "idPatientIce": {
                        "type": "string",
                        "example": "116653"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      },
                      "relationship": {
                        "type": "string",
                        "example": "Parentesco editado"
                      },
                      "name": {
                        "type": "string",
                        "example": "Otro Nombre22"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "test123456@hulilabs.com"
                      },
                      "sendNotifications": {
                        "type": "boolean",
                        "example": false
                      },
                      "phones": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "245710"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MOBILE",
                                "HOME",
                                "WORK",
                                "OTHER"
                              ],
                              "example": "MOBILE"
                            },
                            "phoneNumber": {
                              "type": "string",
                              "description": "Phone number (may be absent in some cases)",
                              "example": "8884"
                            },
                            "phoneExtension": {
                              "type": "string",
                              "description": "Phone extension (when available)",
                              "example": "101"
                            },
                            "country": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "188"
                                },
                                "iso2": {
                                  "type": "string",
                                  "example": "CR"
                                },
                                "iso3": {
                                  "type": "string",
                                  "example": "CRI"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Costa Rica"
                                },
                                "phonePrefix": {
                                  "type": "string",
                                  "example": "506"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "isFromCitizenRegister": {
              "type": "boolean",
              "description": "Indicates if patient data was imported from citizen registry",
              "example": false
            },
            "isDemoPatient": {
              "type": "boolean",
              "description": "Indicates if this is a demo/test patient",
              "example": false
            }
          }
        },
        "Insurance": {
          "type": "object",
          "description": "Insurance information schema",
          "properties": {
            "id": {
              "type": "integer"
            },
            "status": {
              "type": "string"
            },
            "idUserModifiedBy": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "affiliations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "idPatientInsurance": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "idInsurance": {
                    "type": "string"
                  },
                  "insuranceNumber": {
                    "type": "string"
                  },
                  "insuranceName": {
                    "type": "string",
                    "description": "Name of the insurance company",
                    "example": "Pan-American Life (PALIG)"
                  }
                }
              }
            }
          }
        },
        "DoctorAvailabilityResponse": {
          "type": "object",
          "properties": {
            "idCalendar": {
              "type": "string",
              "description": "Calendar identifier",
              "example": "1"
            },
            "idClinic": {
              "type": "string",
              "description": "Clinic identifier",
              "example": "2292"
            },
            "idDoctor": {
              "type": "string",
              "description": "Doctor identifier",
              "example": "1"
            },
            "slotDates": {
              "type": "array",
              "description": "Available dates with time slots",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date in ISO 8601 format",
                    "example": "2025-07-01T00:00:00Z"
                  },
                  "dateL10n": {
                    "type": "string",
                    "description": "Localized short date format",
                    "example": "mar 01, jul"
                  },
                  "dateL10nComp": {
                    "type": "string",
                    "description": "Localized complete date format",
                    "example": "martes 1 de julio"
                  },
                  "slots": {
                    "type": "array",
                    "description": "Available time slots for this date",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Full date-time for the slot",
                          "example": "2025-07-03T08:00:00Z"
                        },
                        "sourceEvent": {
                          "type": "string",
                          "description": "Source event identifier",
                          "example": "516015"
                        },
                        "time": {
                          "type": "string",
                          "description": "Time in compact format",
                          "example": "20250703T0800"
                        },
                        "timeL10n": {
                          "type": "string",
                          "description": "Localized time format",
                          "example": "08:00 am"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "Appointment": {
          "type": "object",
          "properties": {
            "idEvent": {
              "type": "string",
              "description": "Unique appointment identifier",
              "example": "743905"
            },
            "idDoctor": {
              "type": "string",
              "description": "Doctor identifier",
              "example": "1"
            },
            "idClinic": {
              "type": "string",
              "description": "Clinic identifier",
              "example": "2292"
            },
            "idPatientFile": {
              "type": "string",
              "description": "Patient file identifier",
              "example": "1001"
            },
            "idCalendar": {
              "type": "string",
              "description": "Calendar identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "User ID who last modified the appointment",
              "example": "56576"
            },
            "idUserCreatedBy": {
              "type": "string",
              "description": "User ID who created the appointment",
              "example": "56576"
            },
            "isConfirmedByProvider": {
              "type": "boolean",
              "description": "Whether the appointment is confirmed by the healthcare provider",
              "example": false
            },
            "isConfirmedByPatient": {
              "type": "boolean",
              "description": "Whether the appointment is confirmed by the patient",
              "example": false
            },
            "isFirstTimePatient": {
              "type": "boolean",
              "description": "Whether this is the patient's first visit to this doctor",
              "example": false
            },
            "isStatusModifiedByPatient": {
              "type": "boolean",
              "description": "Whether the appointment status was modified by the patient",
              "example": false
            },
            "isDeletedForDoctor": {
              "type": "boolean",
              "description": "Whether the appointment is hidden from doctor's view",
              "example": false
            },
            "statusAppointment": {
              "type": "string",
              "enum": [
                "BOOKED",
                "RESCHEDULED",
                "COMPLETED",
                "CANCELLED",
                "NOSHOW"
              ],
              "description": "Current appointment status",
              "example": "BOOKED"
            },
            "statusAvailability": {
              "type": "string",
              "enum": [
                "AVAILABLE",
                "BUSY",
                "IGNORE",
                "DELETED"
              ],
              "description": "Calendar availability status for this slot",
              "example": "BUSY"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "description": "Appointment start date (YYYY-MM-DD)",
              "example": "2025-07-15"
            },
            "timeFrom": {
              "type": "string",
              "description": "Appointment start time (HH:MM:SS)",
              "example": "11:00:00"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "description": "Appointment end date (YYYY-MM-DD)",
              "example": "2025-07-15"
            },
            "timeTo": {
              "type": "string",
              "description": "Appointment end time (HH:MM:SS)",
              "example": "11:30:00"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp",
              "example": "2025-07-02T16:00:29Z"
            },
            "insuranceName": {
              "type": "string",
              "description": "Insurance provider name (when provided)",
              "example": "Premium Health Insurance"
            },
            "insuranceNumber": {
              "type": "string",
              "description": "Insurance provider ID (when provided)",
              "example": "PREM789012"
            }
          }
        },
        "CreateAppointmentRequest": {
          "type": "object",
          "required": [
            "id_doctor",
            "id_clinic",
            "start_date",
            "time_from"
          ],
          "properties": {
            "id_doctor": {
              "type": "integer",
              "description": "Doctor identifier",
              "example": 1
            },
            "id_clinic": {
              "type": "integer",
              "description": "Clinic identifier",
              "example": 2292
            },
            "id_patient_file": {
              "type": "integer",
              "description": "Patient file identifier (enables additional validations)",
              "example": 1001
            },
            "source_event": {
              "type": "integer",
              "description": "Availability event ID for the appointment slot",
              "example": 516015
            },
            "start_date": {
              "type": "string",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
              "description": "Appointment start date (YYYY-MM-DD), must be in the future",
              "example": "2025-07-10"
            },
            "time_from": {
              "type": "string",
              "pattern": "[0-9]{2}:[0-9]{2}:[0-9]{2}",
              "description": "Appointment start time (HH:MM:SS), must be at least 1 hour in advance",
              "example": "09:00:00"
            },
            "end_date": {
              "type": "string",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}",
              "description": "Appointment end date (YYYY-MM-DD), auto-calculated if not provided",
              "example": "2025-07-10"
            },
            "time_to": {
              "type": "string",
              "pattern": "[0-9]{2}:[0-9]{2}:[0-9]{2}",
              "description": "Appointment end time (HH:MM:SS), auto-calculated if not provided",
              "example": "09:30:00"
            },
            "notes": {
              "type": "string",
              "maxLength": 1000000,
              "description": "Appointment notes",
              "example": "Follow-up consultation"
            },
            "color": {
              "type": "string",
              "pattern": "^[0-9ABCDEF]{6}",
              "description": "Hexadecimal color for calendar display (6 characters)",
              "example": "FF5733"
            },
            "id_treatment": {
              "type": "integer",
              "description": "Treatment ID to be evaluated during the appointment",
              "example": 601
            },
            "insurance_name": {
              "type": "string",
              "maxLength": 100,
              "description": "Insurance provider name",
              "example": "Health Insurance Co"
            },
            "insurance_number": {
              "type": "string",
              "maxLength": 100,
              "description": "Insurance provider ID",
              "example": "INS123456"
            },
            "is_first_time_patient": {
              "type": "boolean",
              "description": "Flag indicating if this is patient's first visit to this doctor",
              "example": false
            },
            "id_tags": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Tag IDs to assign to the appointment",
              "example": [
                101,
                102
              ]
            }
          }
        },
        "UpdateAppointmentRequest": {
          "type": "object",
          "properties": {
            "notes": {
              "type": "string",
              "maxLength": 1000000,
              "description": "Appointment notes (permission required)",
              "example": "Follow-up consultation"
            },
            "color": {
              "type": "string",
              "pattern": "^[0-9ABCDEF]{6}",
              "description": "Hexadecimal color for calendar display (permission required)",
              "example": "33FF57"
            },
            "id_treatment": {
              "type": "integer",
              "description": "Treatment ID (permission required)",
              "example": 602
            },
            "insurance_name": {
              "type": "string",
              "maxLength": 100,
              "description": "Insurance provider name",
              "example": "Premium Health Insurance"
            },
            "insurance_number": {
              "type": "string",
              "maxLength": 100,
              "description": "Insurance provider ID",
              "example": "PREM789012"
            },
            "is_first_time_patient": {
              "type": "boolean",
              "description": "First-time patient flag (permission required)",
              "example": false
            },
            "is_deleted_for_doctor": {
              "type": "boolean",
              "description": "Control visibility on doctor calendar",
              "example": false
            },
            "id_tags": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Tag IDs to assign (replaces existing tags)",
              "example": [
                594767,
                609675
              ]
            }
          }
        },
        "Availability": {
          "type": "object",
          "properties": {
            "doctor": {
              "type": "object",
              "description": "Doctor information"
            },
            "clinic": {
              "type": "object",
              "description": "Clinic information"
            },
            "calendar": {
              "type": "object",
              "description": "Calendar information"
            },
            "availability": {
              "type": "array",
              "description": "Available time slots grouped by date",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date for this group of slots",
                    "example": "2024-01-15"
                  },
                  "date_l10n": {
                    "type": "string",
                    "description": "Localized date format",
                    "example": "Monday, January 15, 2024"
                  },
                  "slots": {
                    "type": "array",
                    "description": "Available time slots for this date",
                    "items": {
                      "type": "object",
                      "properties": {
                        "source_event": {
                          "type": "integer",
                          "description": "Source event ID if applicable",
                          "example": 12345
                        },
                        "date_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "ISO 8601 datetime for the slot",
                          "example": "2024-01-15T09:00:00Z"
                        },
                        "time": {
                          "type": "string",
                          "description": "Time in HH:MM:SS format",
                          "example": "09:00:00"
                        },
                        "time_l10n": {
                          "type": "string",
                          "description": "Localized time format",
                          "example": "9:00 AM"
                        }
                      }
                    }
                  }
                }
              }
            },
            "next_availability_date": {
              "type": "string",
              "format": "date",
              "description": "Next available date if no slots in requested range",
              "example": "2024-01-20"
            }
          }
        },
        "BookingTag": {
          "type": "object",
          "properties": {
            "idTag": {
              "type": "string",
              "description": "Tag unique identifier",
              "example": "594601"
            },
            "idOrganization": {
              "type": "string",
              "description": "Organization ID the tag belongs to",
              "example": "3001"
            },
            "color": {
              "type": "string",
              "description": "Tag color code in hexadecimal format",
              "example": "#ffa400"
            },
            "description": {
              "type": "string",
              "description": "Tag description or name",
              "example": "Paciente nuevo"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "description": "Tag status",
              "example": "ACTIVE"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who last modified the tag",
              "example": "3001"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "Tag creation timestamp",
              "example": "2021-02-03T19:03:50Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "Tag last modification timestamp",
              "example": "2025-05-21T15:40:40Z"
            }
          }
        },
        "Doctor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Doctor unique identifier",
              "example": "1001"
            },
            "photo": {
              "type": "string",
              "description": "Doctor photo path (without domain)",
              "example": "huli/doctor/photo/22032024/83606/a5992af667c91b8b054a48309001c97c.jpg"
            },
            "url": {
              "type": "string",
              "description": "Doctor web URL path (without domain)",
              "example": "dr-healthcare-professional"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED"
              ],
              "description": "Doctor status",
              "example": "ACTIVE"
            },
            "idUser": {
              "type": "string",
              "description": "Associated user identifier",
              "example": "2001"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "specialty": {
              "type": "array",
              "description": "Doctor specialties",
              "items": {
                "$ref": "#/components/schemas/Specialty"
              }
            },
            "doctorClinic": {
              "type": "array",
              "description": "Doctor clinic associations",
              "items": {
                "$ref": "#/components/schemas/DoctorClinic"
              }
            },
            "professionalLicense": {
              "type": "array",
              "description": "Professional licenses and certifications",
              "items": {
                "$ref": "#/components/schemas/ProfessionalLicense"
              }
            }
          }
        },
        "ProfessionalLicense": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "License record identifier",
              "example": "358"
            },
            "idProfessionalLicense": {
              "type": "string",
              "description": "Professional license type identifier",
              "example": "6"
            },
            "name": {
              "type": "string",
              "description": "Name of the licensing organization",
              "example": "Medical and Surgical College"
            },
            "licenseNumber": {
              "type": "string",
              "description": "License number",
              "example": "12345"
            },
            "licenseStatus": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "RETIRED",
                "SUSPENDED"
              ],
              "description": "Current status of the license",
              "example": "ACTIVE"
            },
            "licenseType": {
              "type": "string",
              "description": "Type of professional license",
              "example": "DOCTOR_AND_SURGEON"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "description": "Record status",
              "example": "ACTIVE"
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User unique identifier",
              "example": "2001"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "User email address",
              "example": "doctor@example.com"
            },
            "displayName": {
              "type": "string",
              "description": "Full display name",
              "example": "Dr. Healthcare Professional"
            },
            "firstName": {
              "type": "string",
              "description": "First name",
              "example": "Healthcare"
            },
            "lastName": {
              "type": "string",
              "description": "Last name",
              "example": "Professional"
            },
            "gender": {
              "type": "string",
              "enum": [
                "MALE",
                "FEMALE"
              ],
              "description": "User gender",
              "example": "MALE"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number",
              "example": 5551234567
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "BLOCKED",
                "DELETED"
              ],
              "description": "User status",
              "example": "ACTIVE"
            }
          }
        },
        "Specialty": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Specialty unique identifier",
              "example": 501
            },
            "name": {
              "type": "string",
              "description": "Specialty name (localized)",
              "example": "Cardiology"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED"
              ],
              "description": "Specialty status",
              "example": "ACTIVE"
            }
          }
        },
        "DoctorClinic": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Doctor-clinic association identifier",
              "example": "3001"
            },
            "building": {
              "type": "string",
              "description": "Building name",
              "example": "Medical Plaza"
            },
            "floor": {
              "type": "string",
              "description": "Floor information",
              "example": "3rd Floor"
            },
            "office": {
              "type": "string",
              "description": "Office information",
              "example": "Suite 305"
            },
            "phone": {
              "type": "array",
              "description": "Contact phone numbers",
              "items": {
                "$ref": "#/components/schemas/Phone"
              }
            },
            "email": {
              "type": "array",
              "description": "Contact email addresses",
              "items": {
                "type": "string",
                "format": "email",
                "example": "clinic@example.com"
              }
            },
            "idClinic": {
              "type": "string",
              "description": "Associated clinic identifier",
              "example": "4001"
            },
            "clinic": {
              "$ref": "#/components/schemas/Clinic"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED"
              ],
              "description": "Association status",
              "example": "ACTIVE"
            },
            "idPaymentMethods": {
              "type": "array",
              "description": "Accepted payment method IDs",
              "items": {
                "type": "string"
              },
              "example": [
                "1",
                "2",
                "3"
              ]
            },
            "insurances": {
              "type": "array",
              "description": "Accepted insurance providers",
              "items": {
                "$ref": "#/components/schemas/Insurance"
              }
            }
          }
        },
        "Clinic": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Clinic unique identifier",
              "example": "2001"
            },
            "name": {
              "type": "string",
              "description": "Clinic name",
              "example": "Healthcare Center"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "description": "Geographic latitude",
              "example": 9.9280694
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "description": "Geographic longitude",
              "example": -84.0907246
            },
            "address": {
              "type": "string",
              "description": "Physical address",
              "example": "123 Medical Street"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Main clinic phone number",
              "example": "5551234567"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Clinic email address",
              "example": "info@clinic.com"
            },
            "url": {
              "type": "string",
              "description": "Clinic URL slug",
              "example": "healthcare-center"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "description": "Clinic status",
              "example": "ACTIVE"
            },
            "idCity": {
              "type": "string",
              "description": "City identifier",
              "example": "1"
            },
            "city": {
              "$ref": "#/components/schemas/City"
            },
            "idUser": {
              "type": "string",
              "description": "Owner user identifier",
              "example": "3001"
            },
            "user": {
              "$ref": "#/components/schemas/User"
            },
            "type": {
              "type": "string",
              "enum": [
                "PHYSICAL",
                "VIRTUAL"
              ],
              "description": "Clinic type",
              "example": "PHYSICAL"
            },
            "cityName": {
              "type": "string",
              "description": "City name for display",
              "example": "San José"
            }
          }
        },
        "City": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "City identifier",
              "example": "1"
            },
            "name": {
              "type": "string",
              "description": "City name",
              "example": "San José"
            },
            "province": {
              "$ref": "#/components/schemas/Province"
            }
          }
        },
        "Province": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Province identifier",
              "example": "7"
            },
            "name": {
              "type": "string",
              "description": "Province name",
              "example": "San José"
            },
            "country": {
              "$ref": "#/components/schemas/Country"
            },
            "timeZone": {
              "type": "string",
              "description": "Province time zone",
              "example": "America/Costa_Rica"
            }
          }
        },
        "Country": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Country identifier",
              "example": "188"
            },
            "iso2": {
              "type": "string",
              "description": "ISO 3166-1 alpha-2 country code",
              "example": "CR"
            },
            "iso3": {
              "type": "string",
              "description": "ISO 3166-1 alpha-3 country code",
              "example": "CRI"
            },
            "name": {
              "type": "string",
              "description": "Country name",
              "example": "Costa Rica"
            },
            "phonePrefix": {
              "type": "string",
              "description": "Country phone prefix",
              "example": "506"
            }
          }
        },
        "Phone": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Phone record identifier",
              "example": 5001
            },
            "type": {
              "type": "string",
              "enum": [
                "NONE_PHONE",
                "MOBILE",
                "HOME",
                "WORK",
                "OTHER"
              ],
              "description": "Phone type",
              "example": "MOBILE"
            },
            "phone_number": {
              "type": "integer",
              "description": "Phone number",
              "example": 5551234567
            },
            "country": {
              "$ref": "#/components/schemas/Country"
            },
            "phone_extension": {
              "type": "integer",
              "description": "Phone extension (optional)",
              "example": 123
            }
          }
        },
        "Checkup": {
          "type": "object",
          "properties": {
            "idEvent": {
              "type": "string",
              "description": "Event/checkup unique identifier",
              "example": "7"
            },
            "idUser": {
              "type": "string",
              "description": "User identifier",
              "example": "3001"
            },
            "idPatientFile": {
              "type": "string",
              "description": "Patient file identifier",
              "example": "1001"
            },
            "consultationType": {
              "type": "string",
              "enum": [
                "INITIAL",
                "FOLLOW_UP"
              ],
              "description": "Type of consultation",
              "example": "INITIAL"
            },
            "isComplete": {
              "type": "integer",
              "description": "Whether the checkup is complete (0 = false, 1 = true)",
              "example": 0
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp",
              "example": "2024-01-15T10:30:00Z"
            },
            "startedOn": {
              "type": "string",
              "format": "date-time",
              "description": "Checkup start timestamp",
              "example": "2024-01-15T09:00:00Z"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who last modified the checkup",
              "example": "1"
            }
          }
        },
        "CheckupPrescription": {
          "type": "object",
          "properties": {
            "prescriptions": {
              "type": "array",
              "description": "List of prescribed medications",
              "items": {
                "type": "object",
                "properties": {
                  "idPatientPrescription": {
                    "type": "string",
                    "description": "Prescription record identifier",
                    "example": "1"
                  },
                  "idPatientPrescriptionHistory": {
                    "type": "string",
                    "description": "Prescription history identifier",
                    "example": "1"
                  },
                  "idUserModifiedBy": {
                    "type": "string",
                    "description": "ID of user who modified the prescription",
                    "example": "1"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the prescription",
                    "example": "ACTIVE"
                  },
                  "indications": {
                    "type": "string",
                    "description": "Prescription indications",
                    "example": "New Indications"
                  },
                  "medications": {
                    "type": "array",
                    "description": "List of medications in this prescription",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idPatientPrescription": {
                          "type": "string",
                          "description": "Prescription identifier for medication",
                          "example": "1"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the medication",
                          "example": "ACTIVE"
                        },
                        "medication": {
                          "type": "string",
                          "description": "Name of the medication",
                          "example": "Medication 1"
                        },
                        "indications": {
                          "type": "string",
                          "description": "Medication-specific indications",
                          "example": "Indication 1"
                        }
                      }
                    }
                  },
                  "createdOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the prescription was created",
                    "example": "2024-01-15T10:30:00Z"
                  },
                  "modifiedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the prescription was last modified",
                    "example": "2024-01-15T10:30:00Z"
                  }
                }
              }
            }
          }
        },
        "CheckupVitalSigns": {
          "type": "object",
          "properties": {
            "idPatientVitalSigns": {
              "type": "string",
              "description": "Patient vital signs identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the vital signs",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the vital signs record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the vital signs were created",
              "example": "2024-01-15T09:15:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the vital signs were last modified",
              "example": "2024-01-15T09:15:00Z"
            },
            "temperature": {
              "type": "number",
              "format": "float",
              "description": "Body temperature",
              "example": 9.9
            },
            "pulse": {
              "type": "number",
              "format": "float",
              "description": "Pulse rate",
              "example": 8.8
            },
            "respiration": {
              "type": "number",
              "format": "float",
              "description": "Respiration rate",
              "example": 7.7
            },
            "systolicPressure": {
              "type": "integer",
              "description": "Systolic blood pressure",
              "example": 6
            },
            "diastolicPressure": {
              "type": "integer",
              "description": "Diastolic blood pressure",
              "example": 5
            },
            "saturation": {
              "type": "number",
              "format": "float",
              "description": "Oxygen saturation",
              "example": 4.4
            },
            "glucose": {
              "type": "integer",
              "description": "Glucose level",
              "example": 100
            }
          }
        },
        "CheckupDiagnosis": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Diagnosis identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the diagnosis",
              "example": "3001"
            },
            "additionalObservations": {
              "type": "string",
              "description": "Additional clinical observations",
              "example": "Aditional observations"
            },
            "evolutionNote": {
              "type": "string",
              "description": "Evolution notes",
              "example": "Evolution notes"
            },
            "diagnostics": {
              "type": "array",
              "description": "List of diagnoses",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Diagnostic identifier",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "description": "Diagnosis name",
                    "example": "Diagnóstico ICD 10"
                  },
                  "createdOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the diagnosis was created",
                    "example": "2024-01-15T10:30:00Z"
                  },
                  "modifiedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the diagnosis was last modified",
                    "example": "2024-01-15T10:30:00Z"
                  }
                }
              }
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the diagnosis record was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the diagnosis record was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupLabProcedure": {
          "type": "object",
          "properties": {
            "labProcedureRequests": {
              "type": "array",
              "description": "List of laboratory and procedure requests",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Lab procedure request identifier",
                    "example": "1"
                  },
                  "idPatientPlanLabAndProcedureHistory": {
                    "type": "string",
                    "description": "Patient plan lab and procedure history identifier",
                    "example": "1"
                  },
                  "labsAndProcedures": {
                    "type": "array",
                    "description": "List of specific labs and procedures",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Individual lab/procedure identifier",
                          "example": "2"
                        },
                        "idPatientPlanLabAndProcedureRequest": {
                          "type": "string",
                          "description": "Parent request identifier",
                          "example": "1"
                        },
                        "idUserModifiedBy": {
                          "type": "string",
                          "description": "ID of user who modified the request",
                          "example": "3001"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the lab or procedure",
                          "example": "Lab and procedures 1 - 1 Lab and procedures 1 - 1 Lab and procedures 1 - 1"
                        },
                        "createdOn": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the request was created",
                          "example": "2024-01-15T10:30:00Z"
                        },
                        "modifiedOn": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the request was last modified",
                          "example": "2024-01-15T10:30:00Z"
                        }
                      }
                    }
                  },
                  "createdOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the lab procedure request was created",
                    "example": "2024-01-15T10:30:00Z"
                  },
                  "modifiedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the lab procedure request was last modified",
                    "example": "2024-01-15T10:30:00Z"
                  }
                }
              }
            }
          }
        },
        "CheckupSuffering": {
          "type": "object",
          "properties": {
            "idPatientSuffering": {
              "type": "string",
              "description": "Patient suffering identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the suffering record",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the suffering record",
              "example": "ACTIVE"
            },
            "suffering": {
              "type": "string",
              "description": "Patient suffering description",
              "example": "Patient suffering"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the suffering record was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the suffering record was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupReasonOfVisit": {
          "type": "object",
          "properties": {
            "idPatientReasonOfVisit": {
              "type": "string",
              "description": "Patient reason of visit identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the reason of visit",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the reason of visit record",
              "example": "ACTIVE"
            },
            "reason": {
              "type": "string",
              "description": "Patient reason of visit",
              "example": "Patient reason of visit"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the reason of visit record was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the reason of visit record was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupPhysicalNote": {
          "type": "object",
          "properties": {
            "idPatientPhysicalNote": {
              "type": "string",
              "description": "Patient physical note identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the physical note",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the physical note record",
              "example": "ACTIVE"
            },
            "physical": {
              "type": "string",
              "description": "Patient physical note",
              "example": "Patient physical note"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the physical note was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the physical note was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupAnthropometric": {
          "type": "object",
          "properties": {
            "idPatientAnthropometricData": {
              "type": "string",
              "description": "Patient anthropometric data identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the anthropometric data",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the anthropometric data record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the anthropometric data was created",
              "example": "2024-01-15T09:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the anthropometric data was last modified",
              "example": "2024-01-15T09:30:00Z"
            },
            "height": {
              "type": "integer",
              "description": "Patient height",
              "example": 160
            },
            "heightUnit": {
              "type": "string",
              "description": "Height unit",
              "example": "CENTIMETER"
            },
            "weight": {
              "type": "integer",
              "description": "Patient weight",
              "example": 50
            },
            "weightUnit": {
              "type": "string",
              "description": "Weight unit",
              "example": "KILOGRAM"
            }
          }
        },
        "CheckupNote": {
          "type": "object",
          "properties": {
            "idPatientCheckupNote": {
              "type": "string",
              "description": "Patient checkup note identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the checkup note",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the checkup note record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the checkup note was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the checkup note was last modified",
              "example": "2024-01-15T10:30:00Z"
            },
            "comments": {
              "type": "string",
              "description": "Checkup note comments",
              "example": "Checkup note comments"
            }
          }
        },
        "CheckupReviewOfSystems": {
          "type": "object",
          "properties": {
            "idPatientReviewOfSystems": {
              "type": "string",
              "description": "Patient review of systems identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the review of systems",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the review of systems record",
              "example": "ACTIVE"
            },
            "values": {
              "type": "array",
              "description": "List of system review values",
              "items": {
                "type": "object",
                "properties": {
                  "idOrganizationReviewOfSystems": {
                    "type": "string",
                    "description": "Organization review of systems identifier",
                    "example": "6"
                  },
                  "idReviewOfSystems": {
                    "type": "string",
                    "description": "Review of systems identifier",
                    "example": "6"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the system",
                    "example": "Esquelético"
                  },
                  "isNormal": {
                    "type": "boolean",
                    "description": "Whether the system is normal",
                    "example": true
                  },
                  "note": {
                    "type": "string",
                    "description": "Notes about the system",
                    "example": "Esquelético note"
                  }
                }
              }
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the review of systems was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the review of systems was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupSystematicExamination": {
          "type": "object",
          "properties": {
            "idPatientSystematicExamination": {
              "type": "string",
              "description": "Patient systematic examination identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the systematic examination",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the systematic examination record",
              "example": "ACTIVE"
            },
            "values": {
              "type": "array",
              "description": "List of examination values",
              "items": {
                "type": "object",
                "properties": {
                  "idOrganizationSystematicExamination": {
                    "type": "string",
                    "description": "Organization systematic examination identifier",
                    "example": "1"
                  },
                  "idSystematicExamination": {
                    "type": "string",
                    "description": "Systematic examination identifier",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the examination system",
                    "example": "Abdomen"
                  },
                  "isNormal": {
                    "type": "boolean",
                    "description": "Whether the examination is normal",
                    "example": true
                  },
                  "note": {
                    "type": "string",
                    "description": "Notes about the examination",
                    "example": "Abdomen note"
                  }
                }
              }
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the systematic examination was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the systematic examination was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupSleepPattern": {
          "type": "object",
          "properties": {
            "idPatientSleepPattern": {
              "type": "string",
              "description": "Patient sleep pattern identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the sleep pattern",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the sleep pattern record",
              "example": "ACTIVE"
            },
            "notes": {
              "type": "string",
              "description": "Sleep pattern notes",
              "example": "Sleep pattern notes"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the sleep pattern was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the sleep pattern was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupBowelHabit": {
          "type": "object",
          "properties": {
            "idPatientBowelHabit": {
              "type": "string",
              "description": "Patient bowel habit identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the bowel habit",
              "example": "3001"
            },
            "description": {
              "type": "string",
              "description": "Bowel habit description",
              "example": "Bowel habit description"
            },
            "status": {
              "type": "string",
              "description": "Status of the bowel habit record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the bowel habit was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the bowel habit was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupLastMenstrualCycle": {
          "type": "object",
          "properties": {
            "idPatientLastMenstrualCycle": {
              "type": "string",
              "description": "Patient last menstrual cycle identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the last menstrual cycle",
              "example": "3001"
            },
            "status": {
              "type": "string",
              "description": "Status of the last menstrual cycle record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the last menstrual cycle was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the last menstrual cycle was last modified",
              "example": "2024-01-15T10:30:00Z"
            },
            "lastMenstrualCycle": {
              "type": "string",
              "format": "date-time",
              "description": "Date of last menstrual cycle",
              "example": "2024-01-01T00:00:00Z"
            }
          }
        },
        "CheckupPlanNote": {
          "type": "object",
          "properties": {
            "idPatientPlanNote": {
              "type": "string",
              "description": "Patient plan note identifier",
              "example": "1"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who modified the plan note",
              "example": "3001"
            },
            "note": {
              "type": "string",
              "description": "Plan note",
              "example": "Plan note"
            },
            "status": {
              "type": "string",
              "description": "Status of the plan note record",
              "example": "ACTIVE"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the plan note was created",
              "example": "2024-01-15T10:30:00Z"
            },
            "modifiedOn": {
              "type": "string",
              "format": "date-time",
              "description": "When the plan note was last modified",
              "example": "2024-01-15T10:30:00Z"
            }
          }
        },
        "CheckupCustomQuestions": {
          "type": "object",
          "properties": {
            "questions": {
              "type": "array",
              "description": "List of custom questions and answers",
              "items": {
                "type": "object",
                "properties": {
                  "idCheckupQuestion": {
                    "type": "string",
                    "description": "Checkup question identifier",
                    "example": "4"
                  },
                  "idSection": {
                    "type": "string",
                    "description": "Section identifier",
                    "example": "118"
                  },
                  "name": {
                    "type": "string",
                    "description": "The question text",
                    "example": "¿Soy una pregunta inactiva de Julio Health?"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the question",
                    "example": "INACTIVE"
                  },
                  "answer": {
                    "type": "object",
                    "description": "The answer to the question",
                    "properties": {
                      "textValue": {
                        "type": "string",
                        "description": "Text value of the answer",
                        "example": "Si soy una pregunta inactiva"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of question",
                    "example": "OPEN",
                    "provider_review": {
                      "type": "object",
                      "properties": {
                        "reviewed_by": {
                          "type": "string",
                          "description": "Provider who reviewed the responses",
                          "example": "Dr. John Smith"
                        },
                        "reviewed_on": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When responses were reviewed",
                          "example": "2024-01-15T11:00:00Z"
                        },
                        "provider_comments": {
                          "type": "string",
                          "description": "Provider comments on responses",
                          "example": "Responses indicate good overall health status"
                        },
                        "action_items": {
                          "type": "array",
                          "description": "Action items based on responses",
                          "items": {
                            "type": "string",
                            "example": "Discuss stress management techniques"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "MedicalRecord": {
          "type": "object",
          "properties": {
            "response": {
              "type": "string",
              "example": "OK"
            },
            "data": {
              "type": "object",
              "properties": {
                "response_data": {
                  "type": "object",
                  "properties": {
                    "id_patient_file": {
                      "type": "integer",
                      "description": "Patient file identifier",
                      "example": 1232
                    },
                    "id_user": {
                      "type": "integer",
                      "description": "User ID of the organization owner (see organization endpoint for user details)",
                      "example": 3001
                    },
                    "patient_alcohol_history": {
                      "type": "object",
                      "description": "Patient alcohol consumption history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "description": "State of alcohol history (0=none, 1=has history, 3=suspended)",
                          "example": 3
                        },
                        "notes": {
                          "type": "string",
                          "example": "Notas alcohol"
                        },
                        "alcohol_types": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "cerveza"
                              },
                              "quantity": {
                                "type": "string",
                                "example": "10 por los fines de semana"
                              }
                            }
                          }
                        }
                      }
                    },
                    "patient_allergic_history": {
                      "type": "object",
                      "description": "Patient allergic reactions history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "example": 1
                        },
                        "notes": {
                          "type": "string",
                          "example": "Allergy notes update"
                        },
                        "allergies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id_allergy": {
                                "type": "string",
                                "example": "1"
                              },
                              "name": {
                                "type": "string",
                                "example": "Allergy name #1"
                              },
                              "reaction": {
                                "type": "string",
                                "example": "Allergy reaction #1"
                              }
                            }
                          }
                        }
                      }
                    },
                    "patient_medical_history": {
                      "type": "object",
                      "description": "Patient medical pathologies history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "example": 1
                        },
                        "notes": {
                          "type": "string",
                          "example": "Notas patológicas"
                        },
                        "pathologies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "5"
                              },
                              "name": {
                                "type": "string",
                                "example": "(E10) Diabetes mellitus insulinodependiente"
                              },
                              "medications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "medication": {
                                      "type": "string",
                                      "example": "Acetaminofen todos los días"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "patient_surgical_history": {
                      "type": "object",
                      "description": "Patient surgical history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "example": 1
                        },
                        "notes": {
                          "type": "string",
                          "example": "Surgery notes update."
                        },
                        "surgeries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id_treatment": {
                                "type": "string",
                                "example": "1"
                              },
                              "name": {
                                "type": "string",
                                "example": "Surgery name #1"
                              },
                              "surgery_year": {
                                "type": "string",
                                "example": "Surgery year #1"
                              },
                              "complications": {
                                "type": "string",
                                "example": "Surgery complications #1"
                              }
                            }
                          }
                        }
                      }
                    },
                    "patient_family_history": {
                      "type": "object",
                      "description": "Patient family medical history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "example": 1
                        },
                        "notes": {
                          "type": "string",
                          "example": "Notas familiares"
                        },
                        "pathologies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "1"
                              },
                              "name": {
                                "type": "string",
                                "example": "(E10) Diabetes mellitus insulinodependiente"
                              },
                              "relationships": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "8"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "patient_vaccine_history": {
                      "type": "object",
                      "description": "Patient vaccination history",
                      "properties": {
                        "state": {
                          "type": "integer",
                          "example": 1
                        },
                        "notes": {
                          "type": "string",
                          "example": "Vaccine notes update."
                        },
                        "is_up_to_date": {
                          "type": "string",
                          "example": "1"
                        },
                        "vaccines": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id_vaccine": {
                                "type": "string",
                                "example": "1"
                              },
                              "name": {
                                "type": "string",
                                "example": "Vaccine name #1"
                              },
                              "vaccination_year": {
                                "type": "string",
                                "example": "Vaccine year #1"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "UploadDocumentRequest": {
          "type": "object",
          "required": [
            "file",
            "filename"
          ],
          "properties": {
            "file": {
              "type": "string",
              "format": "byte",
              "description": "Base64 encoded PDF file"
            },
            "filename": {
              "type": "string",
              "description": "Name of the file",
              "example": "medical-report.pdf"
            }
          }
        },
        "Organization": {
          "type": "object",
          "properties": {
            "idOrganization": {
              "type": "string",
              "description": "Organization unique identifier",
              "example": "1001"
            },
            "idOwner": {
              "type": "string",
              "description": "Owner user identifier",
              "example": "2001"
            },
            "name": {
              "type": "string",
              "description": "Organization name",
              "maxLength": 255,
              "example": "Healthcare Organization"
            },
            "idUserModifiedBy": {
              "type": "string",
              "description": "ID of user who last modified the organization",
              "example": "1"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "description": "Organization status",
              "example": "ACTIVE"
            },
            "authorization": {
              "type": "array",
              "nullable": true,
              "description": "Authorized users in the organization. Returns null by default.\nUse expand=AUTHORIZATION query parameter to retrieve authorization details\nincluding doctor user IDs via the idGrantor fields.\n",
              "items": {
                "$ref": "#/components/schemas/Authorization"
              },
              "example": [
                {
                  "id": "1001",
                  "idGrantor": "2001",
                  "idGrantee": "3001",
                  "idOrganization": "1001",
                  "status": "ACTIVE"
                },
                {
                  "id": "1002",
                  "idGrantor": "2002",
                  "idGrantee": "3001",
                  "idOrganization": "1001",
                  "status": "ACTIVE"
                }
              ]
            }
          }
        },
        "Authorization": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique authorization record identifier",
              "example": "1001"
            },
            "idGrantor": {
              "type": "string",
              "description": "User ID of the healthcare professional granting access (doctor)",
              "example": "2001"
            },
            "idGrantee": {
              "type": "string",
              "description": "User ID receiving authorization access",
              "example": "3001"
            },
            "idOrganization": {
              "type": "string",
              "description": "Organization where this authorization applies",
              "example": "1001"
            },
            "status": {
              "type": "string",
              "description": "Authorization status",
              "enum": [
                "ACTIVE",
                "INACTIVE"
              ],
              "example": "ACTIVE"
            }
          }
        },
        "OrganizationResponse": {
          "type": "object",
          "properties": {
            "organizations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "CountryCatalog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "enum": [
                188,
                484,
                591
              ]
            },
            "name": {
              "type": "string",
              "enum": [
                "Costa Rica",
                "Mexico",
                "Panama"
              ]
            }
          },
          "example": {
            "id": 188,
            "name": "Costa Rica"
          }
        },
        "EthnicGroupCatalog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                9,
                10
              ]
            },
            "name": {
              "type": "string",
              "enum": [
                "Afro-descendant",
                "Indigenous",
                "Arab",
                "Caucasian",
                "Mestizo",
                "Oriental",
                "Other",
                "Mulatto",
                "Latino"
              ]
            }
          },
          "example": {
            "id": 5,
            "name": "Mestizo"
          }
        },
        "ProvinceCatalog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Province/State identifier"
            },
            "name": {
              "type": "string",
              "description": "Province/State name"
            },
            "countryId": {
              "type": "integer",
              "description": "Associated country identifier"
            }
          },
          "example": {
            "id": 733,
            "name": "San José",
            "countryId": 188
          }
        }
      },
      "responses": {
        "BadRequest": {
          "description": "Bad request - Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "Unauthorized": {
          "description": "Unauthorized - Missing or invalid authentication",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "error": {
                  "code": "AUTH001",
                  "message": "Missing or invalid authorization header"
                }
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden - User lacks necessary permissions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "error": {
                  "code": "AUTH002",
                  "message": "User does not have access to this resource"
                }
              }
            }
          }
        },
        "NotFound": {
          "description": "Resource not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "error": {
                  "code": "NOT_FOUND",
                  "message": "The requested resource was not found"
                }
              }
            }
          }
        },
        "ServerError": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "error": {
                  "code": "INTERNAL_ERROR",
                  "message": "An internal server error occurred"
                }
              }
            }
          }
        }
      }
    }
  }